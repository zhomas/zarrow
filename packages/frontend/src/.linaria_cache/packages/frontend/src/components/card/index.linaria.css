.cuxhd3q{width:140px;height:200px;background:red;position:absolute;top:0;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform:rotateY(180deg);-ms-transform:rotateY(180deg);transform:rotateY(180deg);border-radius:10px;border:1px solid black;}
.cng0x5e{border-radius:10px;border:1px solid black;position:absolute;width:140px;height:200px;top:0;left:0;text-align:left;padding:10px;z-index:2;-webkit-backface-visibility:hidden;backface-visibility:hidden;}
.w1u4p3tn{max-width:105px;width:100vw;height:200px;cursor:default;position:relative;-webkit-transform-style:preserve-3d;-ms-transform-style:preserve-3d;transform-style:preserve-3d;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9jb21wb25lbnRzL2NhcmQvaW5kZXgudHN4Il0sIm5hbWVzIjpbIi5jdXhoZDNxIiwiLmNuZzB4NWUiLCIudzF1NHAzdG4iXSwibWFwcGluZ3MiOiJBQXFDTUE7QUFZQUM7QUFnQkFDIiwiZmlsZSI6InNyYy9jb21wb25lbnRzL2NhcmQvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBDYXJkTW9kZWwgfSBmcm9tICdnYW1lJ1xuaW1wb3J0IHsgbW90aW9uIH0gZnJvbSAnZnJhbWVyLW1vdGlvbidcbmltcG9ydCB0eXBlIHsgRmx1aWRDYXJkUHJvcHMgfSBmcm9tICcuLi8uLi90eXBpbmdzJ1xuaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSAnQGxpbmFyaWEvcmVhY3QnXG5cbnR5cGUgUHJvcHMgPSBGbHVpZENhcmRQcm9wcyAmIHtcbiAga2V5UHJlZml4Pzogc3RyaW5nXG4gIGRlZ3JlZXM/OiBudW1iZXJcbiAgc3R5bGU/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzXG59XG5cbmV4cG9ydCBjb25zdCBFbXB0eUNhcmQgPSAoKSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgc3R5bGU9e3tcbiAgICAgICAgaGVpZ2h0OiAyMDAsXG4gICAgICAgIHdpZHRoOiAxNDAsXG4gICAgICAgIGJvcmRlclJhZGl1czogMTAsXG4gICAgICAgIGJvcmRlcjogJzFweCBzb2xpZCBibGFjaycsXG4gICAgICAgIHBvc2l0aW9uOiAncmVsYXRpdmUnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd3aGl0ZScsXG4gICAgICAgIHBhZGRpbmc6IDEwLFxuICAgICAgfX1cbiAgICA+PC9kaXY+XG4gIClcbn1cblxuY29uc3QgdmFyaWFudHMgPSB7XG4gIGZhY2VVcDoge1xuICAgIHJvdGF0ZVk6IDAsXG4gIH0sXG4gIGZhY2VEb3duOiB7XG4gICAgcm90YXRlWTogLTE4MCxcbiAgfSxcbn1cblxuY29uc3QgQ2FyZEJhY2sgPSBzdHlsZWQuZGl2YFxuICB3aWR0aDogMTQwcHg7XG4gIGhlaWdodDogMjAwcHg7XG4gIGJhY2tncm91bmQ6IHJlZDtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcbiAgdHJhbnNmb3JtOiByb3RhdGVZKDE4MGRlZyk7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuYFxuXG5jb25zdCBDYXJkRmFjZSA9IHN0eWxlZC5kaXZgXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHdpZHRoOiAxNDBweDtcbiAgaGVpZ2h0OiAyMDBweDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuXG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHotaW5kZXg6IDI7XG5cbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuYFxuXG5jb25zdCBXcmFwcGVyID0gc3R5bGVkKG1vdGlvbi5kaXYpYFxuICBtYXgtd2lkdGg6IDEwNXB4O1xuICB3aWR0aDogMTAwdnc7XG4gIGhlaWdodDogMjAwcHg7XG4gIGN1cnNvcjogZGVmYXVsdDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0cmFuc2Zvcm0tc3R5bGU6IHByZXNlcnZlLTNkO1xuYFxuXG5leHBvcnQgY29uc3QgRmx1aWRDYXJkOiBGQzxQcm9wcz4gPSAoe1xuICBjYXJkLFxuICBmYWNlRG93bixcbiAgb25DbGljayxcbiAgb25TZWxlY3QsXG4gIG9uTW91c2VFbnRlcixcbiAgb25Nb3VzZUV4aXQsXG4gIHNlbGVjdGVkLFxuICB2YXJpYW50ID0gJ2RlZmF1bHQnLFxuICBrZXlQcmVmaXggPSAnJyxcbiAgc3R5bGUsXG4gIGRlZ3JlZXMgPSAwLFxufSkgPT4ge1xuICBjb25zdCBnZXRCR0NvbG9yID0gKCkgPT4ge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgY2FzZSAnZGlzYWJsZWQnOlxuICAgICAgICByZXR1cm4gJyNkNWQ1ZDUnXG4gICAgICBjYXNlICdsb3dsaWdodCc6XG4gICAgICAgIHJldHVybiAnI2FiZDZmZidcbiAgICAgIGNhc2UgJ2hpZ2hsaWdodCc6XG4gICAgICAgIHJldHVybiAnI2FiZDZmZidcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnd2hpdGUnXG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIChcbiAgICA8V3JhcHBlclxuICAgICAgbGF5b3V0SWQ9e2Ake2tleVByZWZpeH0ke2NhcmQuaWR9YH1cbiAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICBvbk1vdXNlT3ZlckNhcHR1cmU9e29uTW91c2VFbnRlcn1cbiAgICAgIG9uTW91c2VPdXRDYXB0dXJlPXtvbk1vdXNlRXhpdH1cbiAgICAgIHN0eWxlPXtzdHlsZX1cbiAgICAgIGFuaW1hdGU9e3tcbiAgICAgICAgcm90YXRlWTogZmFjZURvd24gPyAtMTgwIDogMCxcbiAgICAgIH19XG4gICAgPlxuICAgICAgPG1vdGlvbi5kaXYgYW5pbWF0ZT17eyByb3RhdGVaOiBkZWdyZWVzIH19PlxuICAgICAgICA8Q2FyZEZhY2VcbiAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBnZXRCR0NvbG9yKCksXG4gICAgICAgICAgICBjb2xvcjogY2FyZC5zdWl0ID09PSAnRCcgfHwgY2FyZC5zdWl0ID09PSAnSCcgPyAncmVkJyA6ICdibGFjaycsXG4gICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgIDxzcGFuPlxuICAgICAgICAgICAge2NhcmQudmFsdWV9XG4gICAgICAgICAgICB7Y2FyZC5zdWl0fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgeyghIW9uU2VsZWN0IHx8ICEhc2VsZWN0ZWQpICYmIChcbiAgICAgICAgICAgICAgPD5cbiAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgIGtleT17KCEhc2VsZWN0ZWQpLnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgICAgICAgY2hlY2tlZD17ISFzZWxlY3RlZH1cbiAgICAgICAgICAgICAgICAgIG9uTW91c2VPdmVyPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpXG4gICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coJ2NsaWNrIScpXG4gICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjaGFuZ2UnKVxuICAgICAgICAgICAgICAgICAgICBvblNlbGVjdCAmJiBvblNlbGVjdCghIWUudGFyZ2V0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICl9XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgIDwvQ2FyZEZhY2U+XG4gICAgICAgIDxDYXJkQmFjayAvPlxuICAgICAgPC9tb3Rpb24uZGl2PlxuICAgIDwvV3JhcHBlcj5cbiAgKVxufVxuIl19*/