.c1g1ecw{width:126px;height:176px;background:#d71010;position:absolute;top:0;-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform:rotateY(180deg);-ms-transform:rotateY(180deg);transform:rotateY(180deg);border-radius:10px;border:1px solid black;}
.c4wyv6k{border-radius:10px;border:1px solid #00000075;position:absolute;width:126px;height:176px;top:0;left:0;text-align:left;padding:10px;z-index:2;-webkit-backface-visibility:hidden;backface-visibility:hidden;}
.w122c9vh{width:126px;height:176px;cursor:default;position:relative;-webkit-transform-style:preserve-3d;-ms-transform-style:preserve-3d;transform-style:preserve-3d;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9nYW1lL2NhcmQvaW5kZXgudHN4Il0sIm5hbWVzIjpbIi5jMWcxZWN3IiwiLmM0d3l2NmsiLCIudzEyMmM5dmgiXSwibWFwcGluZ3MiOiJBQWFNQTtBQXdCQUM7QUFnQkFDIiwiZmlsZSI6InNyYy9nYW1lL2NhcmQvaW5kZXgudHN4Iiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IEZDIH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBBbmltYXRpb25Qcm9wcywgbW90aW9uIH0gZnJvbSAnZnJhbWVyLW1vdGlvbidcbmltcG9ydCB0eXBlIHsgRmx1aWRDYXJkUHJvcHMgfSBmcm9tICcuLi8uLi90eXBpbmdzJ1xuaW1wb3J0IHsgc3R5bGVkIH0gZnJvbSAnQGxpbmFyaWEvcmVhY3QnXG5cbnR5cGUgUHJvcHMgPSBGbHVpZENhcmRQcm9wcyAmIHtcbiAga2V5UHJlZml4Pzogc3RyaW5nXG4gIHN0YWNrSW5kZXg/OiBudW1iZXJcbiAgc3RhY2tMZW5ndGg/OiBudW1iZXJcbiAgc3R5bGU/OiBSZWFjdC5DU1NQcm9wZXJ0aWVzXG4gIGFuaW1hdGU/OiBBbmltYXRpb25Qcm9wc1snYW5pbWF0ZSddXG59XG5cbmNvbnN0IENhcmRCYWNrID0gc3R5bGVkLmRpdmBcbiAgd2lkdGg6IDEyNnB4O1xuICBoZWlnaHQ6IDE3NnB4O1xuICBiYWNrZ3JvdW5kOiAjZDcxMDEwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO1xuICB0cmFuc2Zvcm06IHJvdGF0ZVkoMTgwZGVnKTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG5gXG5cbmNvbnN0IE91dGxpbmUgPSBzdHlsZWQuZGl2YFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogLTVweDtcbiAgbGVmdDogLTVweDtcbiAgcmlnaHQ6IC01cHg7XG4gIGJvdHRvbTogLTVweDtcbiAgei1pbmRleDogMTA7XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcbiAgYm9yZGVyOiA4cHggc29saWQgIzAwZmYzZjtcbiAgYmFja2ZhY2UtdmlzaWJpbGl0eTogdmlzaWJsZTtcbmBcblxuY29uc3QgQ2FyZEZhY2UgPSBzdHlsZWQuZGl2YFxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjMDAwMDAwNzU7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgd2lkdGg6IDEyNnB4O1xuICBoZWlnaHQ6IDE3NnB4O1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG5cbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgcGFkZGluZzogMTBweDtcbiAgei1pbmRleDogMjtcblxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XG5gXG5cbmNvbnN0IFdyYXBwZXIgPSBzdHlsZWQobW90aW9uLmRpdilgXG4gIHdpZHRoOiAxMjZweDtcbiAgaGVpZ2h0OiAxNzZweDtcbiAgY3Vyc29yOiBkZWZhdWx0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XG5gXG5cbmV4cG9ydCBjb25zdCBGbHVpZENhcmQ6IEZDPFByb3BzPiA9ICh7XG4gIGNhcmQsXG4gIGZhY2VEb3duLFxuICBvbkNsaWNrLFxuICBvblNlbGVjdCxcbiAgb25Nb3VzZUVudGVyLFxuICBvbk1vdXNlRXhpdCxcbiAgc2VsZWN0ZWQsXG4gIHZhcmlhbnQgPSAnZGVmYXVsdCcsXG4gIGtleVByZWZpeCA9ICcnLFxuICBzdHlsZSxcbiAgc3RhY2tJbmRleCA9IDAsXG4gIHN0YWNrTGVuZ3RoID0gMCxcbiAgYW5pbWF0ZSxcbiAgb3V0bGluZSA9IGZhbHNlLFxufSkgPT4ge1xuICBjb25zdCBnZXRCR0NvbG9yID0gKCkgPT4ge1xuICAgIHN3aXRjaCAodmFyaWFudCkge1xuICAgICAgY2FzZSAnZGlzYWJsZWQnOlxuICAgICAgICByZXR1cm4gJyNkNWQ1ZDUnXG4gICAgICBjYXNlICdsb3dsaWdodCc6XG4gICAgICAgIHJldHVybiAnI2FiZDZmZidcbiAgICAgIGNhc2UgJ2hpZ2hsaWdodCc6XG4gICAgICAgIHJldHVybiAnI2FiZDZmZidcbiAgICAgIGNhc2UgJ2dvbGRlbic6XG4gICAgICAgIHJldHVybiAnI0ZGRTEzNSdcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiAnI2ZmZmZmZidcbiAgICB9XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgc3R5bGU9e3sgd2lkdGg6IDYwLCAuLi5zdHlsZSB9fT5cbiAgICAgIDxXcmFwcGVyXG4gICAgICAgIGxheW91dElkPXtgJHtrZXlQcmVmaXh9JHtjYXJkLmlkfWB9XG4gICAgICAgIG9uQ2xpY2s9e29uQ2xpY2t9XG4gICAgICAgIG9uTW91c2VPdmVyQ2FwdHVyZT17b25Nb3VzZUVudGVyfVxuICAgICAgICBvbk1vdXNlT3V0Q2FwdHVyZT17b25Nb3VzZUV4aXR9XG4gICAgICAgIGluaXRpYWw9e3tcbiAgICAgICAgICByb3RhdGVZOiBmYWNlRG93biA/IC0xODAgOiAwLFxuICAgICAgICB9fVxuICAgICAgICBhbmltYXRlPXt7XG4gICAgICAgICAgcm90YXRlWTogZmFjZURvd24gPyAtMTgwIDogMCxcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPG1vdGlvbi5kaXY+XG4gICAgICAgICAgPENhcmRGYWNlXG4gICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdldEJHQ29sb3IoKSxcbiAgICAgICAgICAgICAgY29sb3I6IGNhcmQuc3VpdCA9PT0gJ0QnIHx8IGNhcmQuc3VpdCA9PT0gJ0gnID8gJ3JlZCcgOiAnYmxhY2snLFxuICAgICAgICAgICAgfX1cbiAgICAgICAgICA+XG4gICAgICAgICAgICA8c3Bhbj5cbiAgICAgICAgICAgICAge2NhcmQudmFsdWV9XG4gICAgICAgICAgICAgIHtjYXJkLnN1aXR9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICB7KCEhb25TZWxlY3QgfHwgISFzZWxlY3RlZCkgJiYgKFxuICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgICAgICAgICAga2V5PXsoISFzZWxlY3RlZCkudG9TdHJpbmcoKX1cbiAgICAgICAgICAgICAgICAgICAgdHlwZT1cImNoZWNrYm94XCJcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tlZD17ISFzZWxlY3RlZH1cbiAgICAgICAgICAgICAgICAgICAgb25Nb3VzZU92ZXI9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKVxuICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKClcbiAgICAgICAgICAgICAgICAgICAgICAvL2NvbnNvbGUubG9nKCdjbGljayEnKVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZT17KGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2hhbmdlJylcbiAgICAgICAgICAgICAgICAgICAgICBvblNlbGVjdCAmJiBvblNlbGVjdCghIWUudGFyZ2V0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICA8Lz5cbiAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvQ2FyZEZhY2U+XG4gICAgICAgICAgPENhcmRCYWNrIC8+XG4gICAgICAgIDwvbW90aW9uLmRpdj5cbiAgICAgIDwvV3JhcHBlcj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuIl19*/