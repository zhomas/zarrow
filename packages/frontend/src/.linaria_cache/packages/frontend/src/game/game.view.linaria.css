.gsvp87l{display:grid;grid-template-columns:40px 1fr 1fr 1fr 40px;grid-template-rows:40px 1fr 1fr 1fr 120px;grid-column-gap:0px;grid-row-gap:0px;background:#333333;height:100vh;overflow:hidden;}.gsvp87l > div{position:relative;z-index:1;}.gsvp87l .h1{grid-area:5 / 2 / 6 / 5;z-index:2;}.gsvp87l .h2{grid-area:1 / 3 / 2 / 4;}.gsvp87l .s1{grid-area:4 / 3 / 5 / 4;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;}.gsvp87l .s2{grid-area:2 / 3 / 3 / 4;}.gsvp87l .table{grid-area:2 / 2 / 5 / 5;background:#2b7f2b;z-index:0;}.gsvp87l .table-main{grid-area:3 / 3 / 4 / 4;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.gsvp87l .br{grid-area:4 / 4 / 5 / 5;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}
/*# sourceMappingURL=data:application/json;base64,*/