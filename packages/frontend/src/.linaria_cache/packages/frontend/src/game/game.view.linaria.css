.gsvp87l{display:grid;grid-template-columns:40px 1fr 1fr 1fr 40px;grid-template-rows:40px 1fr 1fr 1fr 120px;grid-column-gap:0px;grid-row-gap:0px;background:#333333;height:100vh;overflow:hidden;}.gsvp87l > div{position:relative;z-index:1;}.gsvp87l .h1{grid-area:5 / 2 / 6 / 5;z-index:2;}.gsvp87l .h2{grid-area:1 / 3 / 2 / 4;}.gsvp87l .s1{grid-area:4 / 3 / 5 / 4;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column-reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse;}.gsvp87l .s2{grid-area:2 / 3 / 3 / 4;}.gsvp87l .table{grid-area:2 / 2 / 5 / 5;background:#2b7f2b;z-index:0;}.gsvp87l .table-main{grid-area:3 / 3 / 4 / 4;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}.gsvp87l .br{grid-area:4 / 4 / 5 / 5;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}
/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9nYW1lL2dhbWUudmlldy50c3giXSwibmFtZXMiOlsiLmdzdnA4N2wiXSwibWFwcGluZ3MiOiJBQTJCTUEiLCJmaWxlIjoic3JjL2dhbWUvZ2FtZS52aWV3LnRzeCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBGQyB9IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtcbiAgQ2FyZE1vZGVsLFxuICBjcmVhdGVEZWNrLFxuICBkZWFsLFxuICB1bmxvY2tUdXJuLFxuICBHYW1lRGlzcGF0Y2gsXG4gIEdhbWVTdGF0ZSxcbiAgcGxheUNhcmRUaHVuayxcbiAgcGlja3VwVGh1bmssXG4gIGhpZ2hsaWdodGVkTG9jYXRpb25TZWxlY3Rvcixcbn0gZnJvbSAnZ2FtZSdcbmltcG9ydCB7IGNvbm5lY3QsIENvbm5lY3RlZFByb3BzIH0gZnJvbSAncmVhY3QtcmVkdXgnXG5pbXBvcnQgeyBGbHVpZENhcmQgfSBmcm9tICcuL2NhcmQnXG5cbmltcG9ydCB7IEFuaW1hdGVTaGFyZWRMYXlvdXQgfSBmcm9tICdmcmFtZXItbW90aW9uJ1xuaW1wb3J0IHsgdXNlQ2FyZEJ1aWxkZXIgYXMgdXNlTG9jYWxDYXJkQ29udGV4dCB9IGZyb20gJy4vZ2FtZS5ob29rcydcbmltcG9ydCB7IFpvbmUgfSBmcm9tICcuL3pvbmUnXG5pbXBvcnQgeyBNaW5pcGxheWVyIH0gZnJvbSAnLi9taW5pcGxheWVyJ1xuaW1wb3J0IHsgRlVQVSB9IGZyb20gJy4vZnVwdSdcbmltcG9ydCB7IEVuZW15SGFuZCB9IGZyb20gJy4vaGFuZC9lbmVteSdcblxuaW1wb3J0IHsgUGxheWVySGFuZCB9IGZyb20gJy4vaGFuZC9wbGF5ZXInXG5cbmltcG9ydCB7IHN0eWxlZCB9IGZyb20gJ0BsaW5hcmlhL3JlYWN0J1xuaW1wb3J0IHsgUmV0aWN1bGUgfSBmcm9tICcuL3JldGljdWxlJ1xuXG5jb25zdCBHYW1lV3JhcHBlciA9IHN0eWxlZC5tYWluYFxuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDQwcHggMWZyIDFmciAxZnIgNDBweDtcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiA0MHB4IDFmciAxZnIgMWZyIDEyMHB4O1xuICBncmlkLWNvbHVtbi1nYXA6IDBweDtcbiAgZ3JpZC1yb3ctZ2FwOiAwcHg7XG4gIGJhY2tncm91bmQ6ICMzMzMzMzM7XG4gIGhlaWdodDogMTAwdmg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cbiAgPiBkaXYge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB6LWluZGV4OiAxO1xuICB9XG5cbiAgLmgxIHtcbiAgICBncmlkLWFyZWE6IDUgLyAyIC8gNiAvIDU7XG4gICAgei1pbmRleDogMjtcbiAgfVxuICAuaDIge1xuICAgIGdyaWQtYXJlYTogMSAvIDMgLyAyIC8gNDtcbiAgfVxuICAuczEge1xuICAgIGdyaWQtYXJlYTogNCAvIDMgLyA1IC8gNDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgfVxuICAuczIge1xuICAgIGdyaWQtYXJlYTogMiAvIDMgLyAzIC8gNDtcbiAgfVxuICAudGFibGUge1xuICAgIGdyaWQtYXJlYTogMiAvIDIgLyA1IC8gNTtcbiAgICBiYWNrZ3JvdW5kOiAjMmI3ZjJiO1xuICAgIHotaW5kZXg6IDA7XG4gIH1cbiAgLnRhYmxlLW1haW4ge1xuICAgIGdyaWQtYXJlYTogMyAvIDMgLyA0IC8gNDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIH1cbiAgLmJyIHtcbiAgICBncmlkLWFyZWE6IDQgLyA0IC8gNSAvIDU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICB9XG5gXG5cbmNvbnN0IF9HYW1lVmlldzogRkM8UHJvcHM+ID0gKHtcbiAgc3RhY2ssXG4gIHVpZCxcbiAgcmVwbGVuaXNoUGlsZSxcbiAgZGVhbCxcbiAgcGxheWVycyxcbiAgY29uZmlybVJlcGxlbmlzaCxcbiAgcGlja3VwU3RhY2ssXG4gIGhpZ2hsaWdodCxcbn0pID0+IHtcbiAgY29uc3QgeyBidWlsZEhhbmRDYXJkLCBidWlsZEZvclBsYXllclN0cmF0YSwgYnVpbGROUEMgfSA9IHVzZUxvY2FsQ2FyZENvbnRleHQoXG4gICAgdWlkLFxuICApXG5cbiAgY29uc3Qgb3Bwb25lbnQgPSBwbGF5ZXJzLmZpbmQoKHApID0+IHAuaWQgIT09IHVpZClcbiAgaWYgKCFvcHBvbmVudCkgdGhyb3cgbmV3IEVycm9yKCdPaCBubycpXG5cbiAgcmV0dXJuIChcbiAgICA8QW5pbWF0ZVNoYXJlZExheW91dCB0eXBlPVwic3dpdGNoXCI+XG4gICAgICA8R2FtZVdyYXBwZXI+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiaDFcIj5cbiAgICAgICAgICA8UGxheWVySGFuZCBvd25lcklEPXt1aWR9IGN1cnJpZWQ9e2J1aWxkSGFuZENhcmR9IC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgyXCI+XG4gICAgICAgICAgPEVuZW15SGFuZCBvd25lcklEPXtvcHBvbmVudC5pZH0gLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiczJcIj5cbiAgICAgICAgICA8TWluaXBsYXllciBvd25lcklEPXtvcHBvbmVudC5pZH0gY3VycmllZD17YnVpbGROUEN9IHVpZD17dWlkfSAvPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJzMVwiPlxuICAgICAgICAgIDxNaW5pcGxheWVyXG4gICAgICAgICAgICBvd25lcklEPXt1aWR9XG4gICAgICAgICAgICBjdXJyaWVkPXtidWlsZEZvclBsYXllclN0cmF0YX1cbiAgICAgICAgICAgIG51ZGdlPVwidXBcIlxuICAgICAgICAgICAgdWlkPXt1aWR9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGFibGVcIj48L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0YWJsZS1tYWluXCI+XG4gICAgICAgICAgPFpvbmVcbiAgICAgICAgICAgIG9uUHJvbXB0PXtwaWNrdXBTdGFja31cbiAgICAgICAgICAgIHByb21wdEFjdGl2ZT17aGlnaGxpZ2h0ID09PSAnc3RhY2snfVxuICAgICAgICAgICAgY2FyZHM9e3N0YWNrLm1hcCgoYykgPT4gKFxuICAgICAgICAgICAgICA8Rmx1aWRDYXJkIGtleT17Yy5pZH0gY2FyZD17Y30gLz5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImJyXCI+XG4gICAgICAgICAgPFpvbmVcbiAgICAgICAgICAgIG9uUHJvbXB0PXtjb25maXJtUmVwbGVuaXNofVxuICAgICAgICAgICAgcHJvbXB0QWN0aXZlPXtoaWdobGlnaHQgPT09ICdyZXBsZW5pc2gnfVxuICAgICAgICAgICAgY2FyZHM9e3JlcGxlbmlzaFBpbGUubWFwKChjKSA9PiAoXG4gICAgICAgICAgICAgIDxGbHVpZENhcmQga2V5PXtjLmlkfSBjYXJkPXtjfSBmYWNlRG93biAvPlxuICAgICAgICAgICAgKSl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxSZXRpY3VsZSB1aWQ9e3VpZH0gLz5cbiAgICAgICAgPEZVUFUgdWlkPXt1aWR9IC8+XG4gICAgICA8L0dhbWVXcmFwcGVyPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtkZWFsfT5SZWRlYWw8L2J1dHRvbj5cbiAgICA8L0FuaW1hdGVTaGFyZWRMYXlvdXQ+XG4gIClcbn1cblxuY29uc3QgbWFwU3RhdGUgPSAoc3RhdGU6IEdhbWVTdGF0ZSwgb3duUHJvcHM6IE93blByb3BzKSA9PiB7XG4gIGNvbnN0IGdldEhpZ2hsaWdodCA9IGhpZ2hsaWdodGVkTG9jYXRpb25TZWxlY3Rvcihvd25Qcm9wcy51aWQpXG4gIHJldHVybiB7XG4gICAgc3RhY2s6IHN0YXRlLnN0YWNrLFxuICAgIHBsYXllcnM6IHN0YXRlLnBsYXllcnMsXG4gICAgcmVwbGVuaXNoUGlsZTogc3RhdGUucGlja3VwUGlsZSxcbiAgICBoaWdobGlnaHQ6IGdldEhpZ2hsaWdodChzdGF0ZSksXG4gIH0gYXMgY29uc3Rcbn1cblxuY29uc3QgbWFwRGlzcGF0Y2ggPSAoZDogR2FtZURpc3BhdGNoLCBvd25Qcm9wczogT3duUHJvcHMpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBwbGF5Q2FyZHM6ICguLi5jYXJkczogQ2FyZE1vZGVsW10pID0+IHtcbiAgICAgIGNvbnN0IGFjdGlvbiA9IHBsYXlDYXJkVGh1bmsoeyBjYXJkcywgcGxheWVySUQ6IG93blByb3BzLnVpZCB9KVxuICAgICAgZChhY3Rpb24pXG4gICAgfSxcbiAgICBkZWFsOiAoKSA9PiB7XG4gICAgICBjb25zdCBhY3Rpb24gPSBkZWFsKHsgZGVjazogY3JlYXRlRGVjaygyNSkgfSlcbiAgICAgIGQoYWN0aW9uKVxuICAgIH0sXG4gICAgY29uZmlybVJlcGxlbmlzaDogKCkgPT4ge1xuICAgICAgY29uc3QgYWN0aW9uID0gdW5sb2NrVHVybih7IGNoYW5uZWw6ICd1c2VyOnJlcGxlbmlzaCcgfSlcbiAgICAgIGQoYWN0aW9uKVxuICAgIH0sXG4gICAgY29uZmlybVBpY2t1cEZhY2VVcDogKGM6IENhcmRNb2RlbCkgPT4ge1xuICAgICAgY29uc3QgYWN0aW9uID0gdW5sb2NrVHVybih7IGNoYW5uZWw6ICd1c2VyOmZhY2V1cHRha2UnLCBkYXRhOiBjLmlkIH0pXG4gICAgICBkKGFjdGlvbilcbiAgICB9LFxuICAgIHBpY2t1cFN0YWNrOiAoKSA9PiB7XG4gICAgICBjb25zdCBhY3Rpb24gPSBwaWNrdXBUaHVuaygpXG4gICAgICBkKGFjdGlvbilcbiAgICB9LFxuICB9XG59XG5cbnR5cGUgT3duUHJvcHMgPSB7IHVpZDogc3RyaW5nIH1cbnR5cGUgUHJvcHMgPSBPd25Qcm9wcyAmIFByb3BzRnJvbVJlZHV4XG5cbmNvbnN0IGNvbm5lY3RvciA9IGNvbm5lY3QobWFwU3RhdGUsIG1hcERpc3BhdGNoKVxuXG50eXBlIFByb3BzRnJvbVJlZHV4ID0gQ29ubmVjdGVkUHJvcHM8dHlwZW9mIGNvbm5lY3Rvcj5cblxuZXhwb3J0IGNvbnN0IEdhbWVWaWV3ID0gY29ubmVjdG9yKF9HYW1lVmlldylcbiJdfQ==*/